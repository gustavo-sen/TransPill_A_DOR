
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNrightUMINUSleftGTLTGELEEQNEleftPLUSMINUSleftMULDIVASSIGN BOA_NOITE BOA_TARDE BOM_DIA COMMA DIV ELSE EQ FALSE FUNCTION GE GT ID IF LBRACE LE LPAREN LT MINUS MUL NE NUMBER PLUS RBRACE RETURN RPAREN SEMI TRUE UMINUS WHILEprograma : stmt_liststmt_list : stmt_list statementstmt_list : statement : BOM_DIAstatement : BOA_TARDEstatement : BOA_NOITEstatement : FUNCTION ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE SEMIstatement : RETURN expr SEMIstatement : IF LPAREN expr RPAREN LBRACE stmt_list RBRACEstatement : WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACEstatement : expr SEMIparam_list : param_list : IDparam_list : param_list COMMA IDarg_list : arg_list : exprarg_list : arg_list COMMA exprexpr : ID ASSIGN expr\n    expr : expr PLUS expr\n         | expr MINUS expr\n         | expr MUL expr\n         | expr DIV expr\n         | expr GE expr\n         | expr LE expr\n         | expr GT expr\n         | expr LT expr\n         | expr EQ expr\n         | expr NE expr\n    expr : MINUS expr %prec UMINUSexpr : LPAREN expr RPARENexpr : NUMBERexpr : ID LPAREN arg_list RPARENexpr : ID'
    
_lr_action_items = {'BOM_DIA':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,4,-2,-4,-5,-6,-11,-8,-3,-3,-3,4,4,4,-9,-10,-7,]),'BOA_TARDE':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,5,-2,-4,-5,-6,-11,-8,-3,-3,-3,5,5,5,-9,-10,-7,]),'BOA_NOITE':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,6,-2,-4,-5,-6,-11,-8,-3,-3,-3,6,6,6,-9,-10,-7,]),'FUNCTION':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,7,-2,-4,-5,-6,-11,-8,-3,-3,-3,7,7,7,-9,-10,-7,]),'RETURN':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,10,-2,-4,-5,-6,-11,-8,-3,-3,-3,10,10,10,-9,-10,-7,]),'IF':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,12,-2,-4,-5,-6,-11,-8,-3,-3,-3,12,12,12,-9,-10,-7,]),'WHILE':([0,2,3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-3,13,-2,-4,-5,-6,-11,-8,-3,-3,-3,13,13,13,-9,-10,-7,]),'ID':([0,2,3,4,5,6,7,9,10,14,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,35,40,56,60,62,63,64,66,67,68,69,70,72,],[-3,8,-2,-4,-5,-6,16,8,8,8,8,8,-11,8,8,8,8,8,8,8,8,8,8,8,8,53,-8,8,65,-3,-3,-3,8,8,8,-9,-10,-7,]),'MINUS':([0,2,3,4,5,6,8,9,10,11,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,61,62,63,64,66,67,68,69,70,72,],[-3,14,-2,-4,-5,-6,-33,14,14,23,14,-31,14,14,23,23,-11,14,14,14,14,14,14,14,14,14,14,14,14,23,23,23,-30,-8,-19,-20,-21,-22,23,23,23,23,23,23,23,23,-32,14,23,-3,-3,-3,14,14,14,-9,-10,-7,]),'LPAREN':([0,2,3,4,5,6,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,40,56,62,63,64,66,67,68,69,70,72,],[-3,9,-2,-4,-5,-6,18,9,9,32,33,9,35,9,9,-11,9,9,9,9,9,9,9,9,9,9,9,9,-8,9,-3,-3,-3,9,9,9,-9,-10,-7,]),'NUMBER':([0,2,3,4,5,6,9,10,14,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,40,56,62,63,64,66,67,68,69,70,72,],[-3,15,-2,-4,-5,-6,15,15,15,15,15,-11,15,15,15,15,15,15,15,15,15,15,15,15,-8,15,-3,-3,-3,15,15,15,-9,-10,-7,]),'$end':([0,1,2,3,4,5,6,21,40,69,70,72,],[-3,0,-1,-2,-4,-5,-6,-11,-8,-9,-10,-7,]),'RBRACE':([3,4,5,6,21,40,62,63,64,66,67,68,69,70,72,],[-2,-4,-5,-6,-11,-8,-3,-3,-3,69,70,71,-9,-10,-7,]),'ASSIGN':([8,],[17,]),'SEMI':([8,11,15,20,34,36,39,41,42,43,44,45,46,47,48,49,50,55,71,],[-33,21,-31,40,-29,-18,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-32,72,]),'PLUS':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,22,-31,22,22,22,22,22,-30,-19,-20,-21,-22,22,22,22,22,22,22,22,22,-32,22,]),'MUL':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,24,-31,24,24,24,24,24,-30,24,24,-21,-22,24,24,24,24,24,24,24,24,-32,24,]),'DIV':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,25,-31,25,25,25,25,25,-30,25,25,-21,-22,25,25,25,25,25,25,25,25,-32,25,]),'GE':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,26,-31,26,26,26,26,26,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,26,26,-32,26,]),'LE':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,27,-31,27,27,27,27,27,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,27,27,-32,27,]),'GT':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,28,-31,28,28,28,28,28,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,28,28,-32,28,]),'LT':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,29,-31,29,29,29,29,29,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,29,29,-32,29,]),'EQ':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,30,-31,30,30,30,30,30,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,30,30,-32,30,]),'NE':([8,11,15,19,20,34,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,55,61,],[-33,31,-31,31,31,31,31,31,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,31,31,-32,31,]),'RPAREN':([8,15,18,19,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,61,65,],[-33,-31,-15,39,-29,-12,-18,55,-16,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,57,58,-13,59,-32,-17,-14,]),'COMMA':([8,15,18,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,53,54,55,61,65,],[-33,-31,-15,-29,-12,-18,56,-16,-30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-13,60,-32,-17,-14,]),'LBRACE':([57,58,59,],[62,63,64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'stmt_list':([0,62,63,64,],[2,66,67,68,]),'statement':([2,66,67,68,],[3,3,3,3,]),'expr':([2,9,10,14,17,18,22,23,24,25,26,27,28,29,30,31,32,33,56,66,67,68,],[11,19,20,34,36,38,41,42,43,44,45,46,47,48,49,50,51,52,61,11,11,11,]),'arg_list':([18,],[37,]),'param_list':([35,],[54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> stmt_list','programa',1,'p_program','message.py',245),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list_rec','message.py',249),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','message.py',253),
  ('statement -> BOM_DIA','statement',1,'p_statement_greet_bom','message.py',258),
  ('statement -> BOA_TARDE','statement',1,'p_statement_greet_tarde','message.py',262),
  ('statement -> BOA_NOITE','statement',1,'p_statement_greet_noite','message.py',266),
  ('statement -> FUNCTION ID LPAREN param_list RPAREN LBRACE stmt_list RBRACE SEMI','statement',9,'p_statement_func_decl','message.py',271),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement_return','message.py',277),
  ('statement -> IF LPAREN expr RPAREN LBRACE stmt_list RBRACE','statement',7,'p_statement_if','message.py',282),
  ('statement -> WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE','statement',7,'p_statement_while','message.py',286),
  ('statement -> expr SEMI','statement',2,'p_statement_expr','message.py',291),
  ('param_list -> <empty>','param_list',0,'p_param_list_empty','message.py',296),
  ('param_list -> ID','param_list',1,'p_param_list_one','message.py',300),
  ('param_list -> param_list COMMA ID','param_list',3,'p_param_list_rec','message.py',304),
  ('arg_list -> <empty>','arg_list',0,'p_arg_list_empty','message.py',308),
  ('arg_list -> expr','arg_list',1,'p_arg_list_one','message.py',312),
  ('arg_list -> arg_list COMMA expr','arg_list',3,'p_arg_list_rec','message.py',316),
  ('expr -> ID ASSIGN expr','expr',3,'p_expr_assign','message.py',321),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','message.py',326),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','message.py',327),
  ('expr -> expr MUL expr','expr',3,'p_expr_binop','message.py',328),
  ('expr -> expr DIV expr','expr',3,'p_expr_binop','message.py',329),
  ('expr -> expr GE expr','expr',3,'p_expr_binop','message.py',330),
  ('expr -> expr LE expr','expr',3,'p_expr_binop','message.py',331),
  ('expr -> expr GT expr','expr',3,'p_expr_binop','message.py',332),
  ('expr -> expr LT expr','expr',3,'p_expr_binop','message.py',333),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','message.py',334),
  ('expr -> expr NE expr','expr',3,'p_expr_binop','message.py',335),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','message.py',340),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','message.py',344),
  ('expr -> NUMBER','expr',1,'p_expr_number','message.py',348),
  ('expr -> ID LPAREN arg_list RPAREN','expr',4,'p_expr_funccall','message.py',352),
  ('expr -> ID','expr',1,'p_expr_id','message.py',356),
]
